// Generated by Dagger (https://dagger.dev).
package module.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import module.filesystem.FileSystem;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DataSourceModule_ProvideFilleSystemFactory implements Factory<FileSystem> {
  @Override
  public FileSystem get() {
    return provideFilleSystem();
  }

  public static DataSourceModule_ProvideFilleSystemFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static FileSystem provideFilleSystem() {
    return Preconditions.checkNotNullFromProvides(DataSourceModule.INSTANCE.provideFilleSystem());
  }

  private static final class InstanceHolder {
    private static final DataSourceModule_ProvideFilleSystemFactory INSTANCE = new DataSourceModule_ProvideFilleSystemFactory();
  }
}
