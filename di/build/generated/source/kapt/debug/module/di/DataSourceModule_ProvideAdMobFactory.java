// Generated by Dagger (https://dagger.dev).
package module.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import module.admob.AdMob;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DataSourceModule_ProvideAdMobFactory implements Factory<AdMob> {
  private final Provider<Context> contextProvider;

  public DataSourceModule_ProvideAdMobFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public AdMob get() {
    return provideAdMob(contextProvider.get());
  }

  public static DataSourceModule_ProvideAdMobFactory create(Provider<Context> contextProvider) {
    return new DataSourceModule_ProvideAdMobFactory(contextProvider);
  }

  public static AdMob provideAdMob(Context context) {
    return Preconditions.checkNotNullFromProvides(DataSourceModule.INSTANCE.provideAdMob(context));
  }
}
