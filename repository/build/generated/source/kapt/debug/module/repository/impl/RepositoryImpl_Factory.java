// Generated by Dagger (https://dagger.dev).
package module.repository.impl;

import com.project.guardapp.data.repository.api.SharedPrefsAPI;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import module.repository.api.AdMobApi;
import module.repository.api.ContactManegerApi;
import module.repository.api.FileSystemAPI;
import module.repository.api.FireBaseRemoteConfigApi;
import module.repository.api.PhoneInfoAPI;
import module.repository.api.YandexAppMetricaApi;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepositoryImpl_Factory implements Factory<RepositoryImpl> {
  private final Provider<PhoneInfoAPI> phoneInfoProvider;

  private final Provider<ContactManegerApi> contactManegerProvider;

  private final Provider<FileSystemAPI> fileSystemProvider;

  private final Provider<SharedPrefsAPI> sharedPrefsProvider;

  private final Provider<FireBaseRemoteConfigApi> fireBaseConfigProvider;

  private final Provider<AdMobApi> adMobProvider;

  private final Provider<YandexAppMetricaApi> yandexAppMetricaProvider;

  public RepositoryImpl_Factory(Provider<PhoneInfoAPI> phoneInfoProvider,
      Provider<ContactManegerApi> contactManegerProvider,
      Provider<FileSystemAPI> fileSystemProvider, Provider<SharedPrefsAPI> sharedPrefsProvider,
      Provider<FireBaseRemoteConfigApi> fireBaseConfigProvider, Provider<AdMobApi> adMobProvider,
      Provider<YandexAppMetricaApi> yandexAppMetricaProvider) {
    this.phoneInfoProvider = phoneInfoProvider;
    this.contactManegerProvider = contactManegerProvider;
    this.fileSystemProvider = fileSystemProvider;
    this.sharedPrefsProvider = sharedPrefsProvider;
    this.fireBaseConfigProvider = fireBaseConfigProvider;
    this.adMobProvider = adMobProvider;
    this.yandexAppMetricaProvider = yandexAppMetricaProvider;
  }

  @Override
  public RepositoryImpl get() {
    return newInstance(phoneInfoProvider.get(), contactManegerProvider.get(), fileSystemProvider.get(), sharedPrefsProvider.get(), fireBaseConfigProvider.get(), adMobProvider.get(), yandexAppMetricaProvider.get());
  }

  public static RepositoryImpl_Factory create(Provider<PhoneInfoAPI> phoneInfoProvider,
      Provider<ContactManegerApi> contactManegerProvider,
      Provider<FileSystemAPI> fileSystemProvider, Provider<SharedPrefsAPI> sharedPrefsProvider,
      Provider<FireBaseRemoteConfigApi> fireBaseConfigProvider, Provider<AdMobApi> adMobProvider,
      Provider<YandexAppMetricaApi> yandexAppMetricaProvider) {
    return new RepositoryImpl_Factory(phoneInfoProvider, contactManegerProvider, fileSystemProvider, sharedPrefsProvider, fireBaseConfigProvider, adMobProvider, yandexAppMetricaProvider);
  }

  public static RepositoryImpl newInstance(PhoneInfoAPI phoneInfo, ContactManegerApi contactManeger,
      FileSystemAPI fileSystem, SharedPrefsAPI sharedPrefs, FireBaseRemoteConfigApi fireBaseConfig,
      AdMobApi adMob, YandexAppMetricaApi yandexAppMetrica) {
    return new RepositoryImpl(phoneInfo, contactManeger, fileSystem, sharedPrefs, fireBaseConfig, adMob, yandexAppMetrica);
  }
}
