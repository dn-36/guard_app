// Generated by Dagger (https://dagger.dev).
package module.repository.impl;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import module.domain.repository.RemoteConfigDomain;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RemoteConfigImpl_Factory implements Factory<RemoteConfigImpl> {
  private final Provider<RemoteConfigDomain> dataProvider;

  public RemoteConfigImpl_Factory(Provider<RemoteConfigDomain> dataProvider) {
    this.dataProvider = dataProvider;
  }

  @Override
  public RemoteConfigImpl get() {
    return newInstance(dataProvider.get());
  }

  public static RemoteConfigImpl_Factory create(Provider<RemoteConfigDomain> dataProvider) {
    return new RemoteConfigImpl_Factory(dataProvider);
  }

  public static RemoteConfigImpl newInstance(RemoteConfigDomain data) {
    return new RemoteConfigImpl(data);
  }
}
