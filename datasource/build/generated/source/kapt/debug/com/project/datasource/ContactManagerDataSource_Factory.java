// Generated by Dagger (https://dagger.dev).
package com.project.datasource;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import module.contactmaneger.ContactManager;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ContactManagerDataSource_Factory implements Factory<ContactManagerDataSource> {
  private final Provider<ContactManager> contactManagerProvider;

  public ContactManagerDataSource_Factory(Provider<ContactManager> contactManagerProvider) {
    this.contactManagerProvider = contactManagerProvider;
  }

  @Override
  public ContactManagerDataSource get() {
    return newInstance(contactManagerProvider.get());
  }

  public static ContactManagerDataSource_Factory create(
      Provider<ContactManager> contactManagerProvider) {
    return new ContactManagerDataSource_Factory(contactManagerProvider);
  }

  public static ContactManagerDataSource newInstance(ContactManager contactManager) {
    return new ContactManagerDataSource(contactManager);
  }
}
