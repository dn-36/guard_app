// Generated by Dagger (https://dagger.dev).
package com.project.datasource;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import module.filesystem.FileSystem;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FileSystemDataSource_Factory implements Factory<FileSystemDataSource> {
  private final Provider<FileSystem> fileSystemProvider;

  public FileSystemDataSource_Factory(Provider<FileSystem> fileSystemProvider) {
    this.fileSystemProvider = fileSystemProvider;
  }

  @Override
  public FileSystemDataSource get() {
    return newInstance(fileSystemProvider.get());
  }

  public static FileSystemDataSource_Factory create(Provider<FileSystem> fileSystemProvider) {
    return new FileSystemDataSource_Factory(fileSystemProvider);
  }

  public static FileSystemDataSource newInstance(FileSystem fileSystem) {
    return new FileSystemDataSource(fileSystem);
  }
}
